#!/bin/sh
#
# Play specific sounds.

if test -p /dev/stdin || test -f /dev/stdin; then
    read -r urgency summary _
else
    summary=$2
    urgency=$1
fi

case $urgency in
    CRITICAL | [0-3])
        urgency=true
        ;;
    *)
        urgency=false
        ;;
esac

set -f
IFS=

case $summary in
    .device.added)
        f=mac-sound-pack-Device_Connect.wav
        ;;
    .device.removed)
        f=mac-sound-pack-Device_Disconnect.wav
        ;;
    .device*)
        $urgency && f=mac-sound-pack-Device_Failed.wav
        ;;
    .email.arrived)
        f=mac-sound-pack-new-mail.wav
        ;;
    .email.bounced)
        f=mac-sound-pack-mail-sent.wav
        ;;
    .email*)
        $urgency && f=mac-sound-pack-Error.wav
        ;;
    .email.nomail)
        f=mac-sound-pack-no-mail.wav
        ;;
    .im*)
        $urgency && f=mac-sound-pack-Error.wav
        ;;
    .im.sent)
        f=mac-sound-pack-sent-message.wav
        ;;
    .im.received)
        f=mac-sound-pack-received-message.wav
        ;;
    .misc.exclamation)
        f=mac-sound-pack-Exclamation.wav
        ;;
    .misc*)
        $urgency && f=mac-sound-pack-Error.wav
        ;;
    .network.connected)
        f=mac-sound-pack-invitation-accepted.wav
        ;;
    .network.disconnected)
        f=mac-sound-pack-invitation.wav
        ;;
    .network*)
        $urgency && f=mac-sound-pack-Error.wav
        ;;
    .presence.offline)
        f=mac-sound-pack-buddy-logging-out.wav
        ;;
    .presence.online)
        f=mac-sound-pack-buddy-logging-in.wav
        ;;
    .transfer.complete)
        f=mac-sound-pack-file-transfer-complete.wav
        ;;
    .transfer*)
        $urgency && f=mac-sound-pack-Error.wav
        ;;
esac

exec aplay "${XDG_DATA_HOME:-/home/user1/share}/sounds/${f:?}" 1>/dev/null 2>&1

# vim: set ft=sh
